<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="827e6fae-04d8-47e1-a74d-b097fa07ecd3" name="Changes" comment="Implemented save functionality for array type fields.&#10;&#10;The value of the array will be saved between curly brackets and each element will be separated with a comma (e.g. {1,2,3}, {true,false,true}... ).">
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/han/util/ObjectSaver.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/han/util/ObjectSaver.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit5 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="HARD" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Han-Kim-0811&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="20581799-15d2-4bb8-9c04-319442707dd4" />
        <option name="url" value="https://github.com/Han-Kim-0811/ObjectSaver.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2XYbT2ACQOCwnhfTEbk3Ukdcuwz" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/kdong/Desktop/Projects/Java Projects/ObjectSaver/src/test/java/model/arrays&quot;,
    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;ChangesTree.GroupingKeys&quot;: [
      &quot;directory&quot;,
      &quot;module&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/test/java/model/arrays" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/test/resources/primitives" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="han.util" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="model.primitives" />
      <recent name="model" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.ArrayTest">
    <configuration name="ArrayTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="ObjectSaver" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="han.util.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="han.util" />
      <option name="MAIN_CLASS_NAME" value="han.util.ArrayTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ArrayTest.ByteTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="ObjectSaver" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="han.util.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="han.util" />
      <option name="MAIN_CLASS_NAME" value="han.util.ArrayTest" />
      <option name="METHOD_NAME" value="ByteTest" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="GenericTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="ObjectSaver" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="han.util.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="han.util" />
      <option name="MAIN_CLASS_NAME" value="han.util.GenericTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PrimitivesTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="ObjectSaver" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="han.util.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="han.util" />
      <option name="MAIN_CLASS_NAME" value="han.util.PrimitivesTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PrimitivesTest.ByteTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="ObjectSaver" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="han.util.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="han.util" />
      <option name="MAIN_CLASS_NAME" value="han.util.PrimitivesTest" />
      <option name="METHOD_NAME" value="ByteTest" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.ArrayTest" />
        <item itemvalue="JUnit.ArrayTest.ByteTest" />
        <item itemvalue="JUnit.PrimitivesTest" />
        <item itemvalue="JUnit.GenericTest" />
        <item itemvalue="JUnit.PrimitivesTest.ByteTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="827e6fae-04d8-47e1-a74d-b097fa07ecd3" name="Changes" comment="" />
      <created>1698808965145</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1698808965145</updated>
    </task>
    <task id="LOCAL-00001" summary="Constructed the basic structure of the utility class ObjectSaver.&#10;&#10;Added fundamental features of a utility class such as final class, private constructors, static methods.&#10;&#10;Added JavaDoc and TODOs to describe functions' purpose.">
      <option name="closed" value="true" />
      <created>1698980278094</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1698980278094</updated>
    </task>
    <task id="LOCAL-00002" summary="Constructed a basic JUnit test for utility class ObjectSaver.&#10;&#10;Added the most basic test for save and load function.&#10;&#10;The ObjectSaver utility class will be implemented through test-driven development, and ObjectSaverTest will have multiple test cases later on.">
      <option name="closed" value="true" />
      <created>1698988976600</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1698988976600</updated>
    </task>
    <task id="LOCAL-00003" summary="Changed the format of the save file. (YAML -&gt; CSV) &#10;&#10;The save function has also been changed accordingly.&#10;&#10;This change was made to focus of the save and load functionality, rather than the parsing functionality, which can be a whole new library by itself.">
      <option name="closed" value="true" />
      <created>1699222248947</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1699222248947</updated>
    </task>
    <task id="LOCAL-00004" summary="Changed the format of the save file. (YAML -&gt; CSV) &#10;&#10;The save function has also been changed accordingly.&#10;&#10;This change was made to focus of the save and load functionality, rather than the parsing functionality, which can be a whole new library by itself.">
      <option name="closed" value="true" />
      <created>1699222279494</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1699222279494</updated>
    </task>
    <task id="LOCAL-00005" summary="Changed the format of the save file. (YAML -&gt; CSV) &#10;&#10;The save function has also been changed accordingly.&#10;&#10;This change was made to focus of the save and load functionality, rather than the parsing functionality, which can be a whole new library by itself.">
      <option name="closed" value="true" />
      <created>1699222292252</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1699222292252</updated>
    </task>
    <task id="LOCAL-00006" summary="Implemented load function for data type &quot;int&quot;.&#10;&#10;This version of implementation will assume that all fields of an object are &quot;int&quot;, and use the &quot;Integer.parseInt(String s)&quot; function.&#10;&#10;Next implementation should focus on making the load function use different parse function for different primitive types.">
      <option name="closed" value="true" />
      <created>1699246525273</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1699246525273</updated>
    </task>
    <task id="LOCAL-00007" summary="Implemented primitive test objects, and wrote test cases according to them.&#10;&#10;The ObjectSaver class will be implemented through test-driven development according to the written test cases.&#10;&#10;Next implementation should focus on making the load function use different parse function for different primitive types.">
      <option name="closed" value="true" />
      <created>1699256319489</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1699256319489</updated>
    </task>
    <task id="LOCAL-00008" summary="Implemented load function for primitive types&#10;&#10;The load function works for both public and private fields.&#10;&#10;Has been tested for all primitive types. Additionally, the save function was tested for all primitive types as well.">
      <option name="closed" value="true" />
      <created>1699301202746</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1699301202746</updated>
    </task>
    <task id="LOCAL-00009" summary="Implemented save and load function for String types&#10;&#10;Since String is used as much as primitive types (and also has similar behavior), I decided to categorize it with other primitive types for testing.&#10;&#10;Additionally, refactored existing test and test objects according to the category.">
      <option name="closed" value="true" />
      <created>1699344079933</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1699344079933</updated>
    </task>
    <task id="LOCAL-00010" summary="Implemented save and load function for String types&#10;&#10;Since String is used as much as primitive types (and also has similar behavior), I decided to categorize it with other primitive types for testing.&#10;&#10;Additionally, refactored existing test and test objects according to the category.">
      <option name="closed" value="true" />
      <created>1699344322706</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1699344322706</updated>
    </task>
    <task id="LOCAL-00011" summary="Implemented save and load function for String types&#10;&#10;Since String is used as much as primitive types (and also has similar behavior), I decided to categorize it with other primitive types for testing.&#10;&#10;Additionally, refactored existing test and test objects according to the category.">
      <option name="closed" value="true" />
      <created>1699344527734</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1699344527734</updated>
    </task>
    <task id="LOCAL-00012" summary="Renamed all save file extension (.yaml -&gt; .csv)&#10;&#10;This change should have been done with commit 306b1ce6d4744890b071c597989d622ae56c6aa2 (Change of save file format). However, it was forgotten.">
      <option name="closed" value="true" />
      <created>1699390085746</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1699390085746</updated>
    </task>
    <task id="LOCAL-00013" summary="Renamed all save file extension (.yaml -&gt; .csv)&#10;&#10;This change should have been done with commit 306b1ce6d4744890b071c597989d622ae56c6aa2 (Change of save file format). However, it was forgotten.">
      <option name="closed" value="true" />
      <created>1699390634719</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1699390634719</updated>
    </task>
    <task id="LOCAL-00014" summary="Renamed all save file extension (.yaml -&gt; .csv)&#10;&#10;This change should have been done with commit 306b1ce6d4744890b071c597989d622ae56c6aa2 (Change of save file format). However, it was forgotten.">
      <option name="closed" value="true" />
      <created>1699390970000</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1699390970000</updated>
    </task>
    <task id="LOCAL-00015" summary="Implemented tests and test object with generic type fields.&#10;&#10;Initially, this test was meant for wrapper classes and String fields, but it turns out to be that generic type fields itself has a unique property (type erasure) that has to be tested.">
      <option name="closed" value="true" />
      <created>1699392992322</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1699392992322</updated>
    </task>
    <task id="LOCAL-00016" summary="Changed functionality of the save function.&#10;&#10;Instead of saving the type of the field, it will save the type of the value. This way, it will always be able to save the actual type of the value instead of the generic type">
      <option name="closed" value="true" />
      <created>1699465662617</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1699465662617</updated>
    </task>
    <task id="LOCAL-00017" summary="Implemented load function for wrapper class types.&#10;&#10;The result of GenericTest shows that this function works for generic type fields, which are set to wrapper class fields and String fields.">
      <option name="closed" value="true" />
      <created>1699466550869</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1699466550869</updated>
    </task>
    <task id="LOCAL-00018" summary="Minor changes for primitive related tests. &#10;&#10;Instead of using equals method, the test will compare each field manually. This way, if a problem occurs with saving and loading a field, we will be able to spot the exact field where the problem occurred.&#10;&#10;Additionally, after the functionality change in commit fe5148f8cd67ba23b5d79c221cfa3bbf63ac8155, it seems like the type of the field is always a wrapper class. This is likely due to getting the type with value using getClass.">
      <option name="closed" value="true" />
      <created>1699506403992</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1699506403992</updated>
    </task>
    <task id="LOCAL-00019" summary="Minor changes for primitive related tests. &#10;&#10;Instead of using equals method, the test will compare each field manually. This way, if a problem occurs with saving and loading a field, we will be able to spot the exact field where the problem occurred.&#10;&#10;Additionally, after the functionality change in commit fe5148f8cd67ba23b5d79c221cfa3bbf63ac8155, it seems like the type of the field is always a wrapper class. This is likely due to getting the type with value using getClass.">
      <option name="closed" value="true" />
      <created>1699506798570</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1699506798570</updated>
    </task>
    <task id="LOCAL-00020" summary="Suppressed warnings &quot;Field may be final&quot; for test objects.&#10;&#10;This decision was made, because I am intentionally not following some conventions to test different outcomes of field's properties.">
      <option name="closed" value="true" />
      <created>1699508431948</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1699508431948</updated>
    </task>
    <task id="LOCAL-00021" summary="Implemented tests for array type fields.&#10;&#10;Test object with generic fields were used to represent array type fields. The test cases will test all primitive types and String arrays.">
      <option name="closed" value="true" />
      <created>1699509805480</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1699509805480</updated>
    </task>
    <task id="LOCAL-00022" summary="Implemented save functionality for array type fields.&#10;&#10;The value of the array will be saved between curly brackets and each element will be separated with a comma (e.g. {1,2,3}, {true,false,true}... ).">
      <option name="closed" value="true" />
      <created>1699514294297</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1699514294298</updated>
    </task>
    <option name="localTasksCounter" value="23" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Constructed the basic structure of the utility class ObjectSaver.&#10;&#10;Added fundamental features of a utility class such as final class, private constructors, static methods.&#10;&#10;Added JavaDoc and TODOs to describe functions' purpose." />
    <MESSAGE value="Constructed a basic JUnit test for utility class ObjectSaver.&#10;&#10;Added the most basic test for save and load function.&#10;&#10;The ObjectSaver utility class will be implemented through test-driven development, and ObjectSaverTest will have multiple test cases later on." />
    <MESSAGE value="Changed the format of the save file. (YAML -&gt; CSV) &#10;&#10;The save function has also been changed accordingly.&#10;&#10;This change was made to focus of the save and load functionality, rather than the parsing functionality, which can be a whole new library by itself." />
    <MESSAGE value="Implemented load function for data type &quot;int&quot;.&#10;&#10;This version of implementation will assume that all fields of an object are &quot;int&quot;, and use the &quot;Integer.parseInt(String s)&quot; function.&#10;&#10;Next implementation should focus on making the load function use different parse function for different primitive types." />
    <MESSAGE value="Implemented primitive test objects, and wrote test cases according to them.&#10;&#10;The ObjectSaver class will be implemented through test-driven development according to the written test cases.&#10;&#10;Next implementation should focus on making the load function use different parse function for different primitive types." />
    <MESSAGE value="Implemented load function for primitive types&#10;&#10;The load function works for both public and private fields.&#10;&#10;Has been tested for all primitive types. Additionally, the save function was tested for all primitive types as well." />
    <MESSAGE value="Implemented save and load function for String types&#10;&#10;Since String is used as much as primitive types (and also has similar behavior), I decided to categorize it with other primitive types for testing.&#10;&#10;Additionally, refactored existing test and test objects according to the category." />
    <MESSAGE value="Renamed all save file extension (.yaml -&gt; .csv)&#10;&#10;This change should have been done with commit 306b1ce6d4744890b071c597989d622ae56c6aa2 (Change of save file format). However, it was forgotten." />
    <MESSAGE value="Implemented tests and test object with generic type fields.&#10;&#10;Initially, this test was meant for wrapper classes and String fields, but it turns out to be that generic type fields itself has a unique property (type erasure) that has to be tested." />
    <MESSAGE value="Changed functionality of the save function.&#10;&#10;Instead of saving the type of the field, it will save the type of the value. This way, it will always be able to save the actual type of the value instead of the generic type" />
    <MESSAGE value="Implemented load function for wrapper class types.&#10;&#10;The result of GenericTest shows that this function works for generic type fields, which are set to wrapper class fields and String fields." />
    <MESSAGE value="Minor changes for primitive related tests. &#10;&#10;Instead of using equals method, the test will compare each field manually. This way, if a problem occurs with saving and loading a field, we will be able to spot the exact field where the problem occurred.&#10;&#10;Additionally, after the functionality change in commit fe5148f8cd67ba23b5d79c221cfa3bbf63ac8155, it seems like the type of the field is always a wrapper class. This is likely due to getting the type with value using getClass." />
    <MESSAGE value="Suppressed warnings &quot;Field may be final&quot; for test objects.&#10;&#10;This decision was made, because I am intentionally not following some conventions to test different outcomes of field's properties." />
    <MESSAGE value="Implemented tests for array type fields.&#10;&#10;Test object with generic fields were used to represent array type fields. The test cases will test all primitive types and String arrays." />
    <MESSAGE value="Implemented save functionality for array type fields.&#10;&#10;The value of the array will be saved between curly brackets and each element will be separated with a comma (e.g. {1,2,3}, {true,false,true}... )." />
    <option name="LAST_COMMIT_MESSAGE" value="Implemented save functionality for array type fields.&#10;&#10;The value of the array will be saved between curly brackets and each element will be separated with a comma (e.g. {1,2,3}, {true,false,true}... )." />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>